//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_User.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooks", ReplyAction="http://tempuri.org/IService1/GetBooksResponse")]
        WcfService.Book[] GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooks", ReplyAction="http://tempuri.org/IService1/GetBooksResponse")]
        System.Threading.Tasks.Task<WcfService.Book[]> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        string AddBook(string name, string description, string url, short visability, int author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        System.Threading.Tasks.Task<string> AddBookAsync(string name, string description, string url, short visability, int author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditBook", ReplyAction="http://tempuri.org/IService1/EditBookResponse")]
        string EditBook(int id, string name, string description, string url, short visability, int author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditBook", ReplyAction="http://tempuri.org/IService1/EditBookResponse")]
        System.Threading.Tasks.Task<string> EditBookAsync(int id, string name, string description, string url, short visability, int author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        string DeleteBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        System.Threading.Tasks.Task<string> DeleteBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthor", ReplyAction="http://tempuri.org/IService1/GetAuthorResponse")]
        WcfService.Author[] GetAuthor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthor", ReplyAction="http://tempuri.org/IService1/GetAuthorResponse")]
        System.Threading.Tasks.Task<WcfService.Author[]> GetAuthorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAuthor", ReplyAction="http://tempuri.org/IService1/AddAuthorResponse")]
        string AddAuthor(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAuthor", ReplyAction="http://tempuri.org/IService1/AddAuthorResponse")]
        System.Threading.Tasks.Task<string> AddAuthorAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditAuthor", ReplyAction="http://tempuri.org/IService1/EditAuthorResponse")]
        string EditAuthor(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditAuthor", ReplyAction="http://tempuri.org/IService1/EditAuthorResponse")]
        System.Threading.Tasks.Task<string> EditAuthorAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        string DeleteAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookAuthor", ReplyAction="http://tempuri.org/IService1/GetBookAuthorResponse")]
        WcfService.BookAuthor[] GetBookAuthor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookAuthor", ReplyAction="http://tempuri.org/IService1/GetBookAuthorResponse")]
        System.Threading.Tasks.Task<WcfService.BookAuthor[]> GetBookAuthorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorName", ReplyAction="http://tempuri.org/IService1/GetAuthorNameResponse")]
        string GetAuthorName(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorName", ReplyAction="http://tempuri.org/IService1/GetAuthorNameResponse")]
        System.Threading.Tasks.Task<string> GetAuthorNameAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImportFile", ReplyAction="http://tempuri.org/IService1/ImportFileResponse")]
        void ImportFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImportFile", ReplyAction="http://tempuri.org/IService1/ImportFileResponse")]
        System.Threading.Tasks.Task ImportFileAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVC_User.ServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVC_User.ServiceReference.IService1>, MVC_User.ServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfService.Book[] GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<WcfService.Book[]> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public string AddBook(string name, string description, string url, short visability, int author) {
            return base.Channel.AddBook(name, description, url, visability, author);
        }
        
        public System.Threading.Tasks.Task<string> AddBookAsync(string name, string description, string url, short visability, int author) {
            return base.Channel.AddBookAsync(name, description, url, visability, author);
        }
        
        public string EditBook(int id, string name, string description, string url, short visability, int author) {
            return base.Channel.EditBook(id, name, description, url, visability, author);
        }
        
        public System.Threading.Tasks.Task<string> EditBookAsync(int id, string name, string description, string url, short visability, int author) {
            return base.Channel.EditBookAsync(id, name, description, url, visability, author);
        }
        
        public string DeleteBook(int id) {
            return base.Channel.DeleteBook(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteBookAsync(int id) {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public WcfService.Author[] GetAuthor() {
            return base.Channel.GetAuthor();
        }
        
        public System.Threading.Tasks.Task<WcfService.Author[]> GetAuthorAsync() {
            return base.Channel.GetAuthorAsync();
        }
        
        public string AddAuthor(string name) {
            return base.Channel.AddAuthor(name);
        }
        
        public System.Threading.Tasks.Task<string> AddAuthorAsync(string name) {
            return base.Channel.AddAuthorAsync(name);
        }
        
        public string EditAuthor(int id, string name) {
            return base.Channel.EditAuthor(id, name);
        }
        
        public System.Threading.Tasks.Task<string> EditAuthorAsync(int id, string name) {
            return base.Channel.EditAuthorAsync(id, name);
        }
        
        public string DeleteAuthor(int id) {
            return base.Channel.DeleteAuthor(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id) {
            return base.Channel.DeleteAuthorAsync(id);
        }
        
        public WcfService.BookAuthor[] GetBookAuthor() {
            return base.Channel.GetBookAuthor();
        }
        
        public System.Threading.Tasks.Task<WcfService.BookAuthor[]> GetBookAuthorAsync() {
            return base.Channel.GetBookAuthorAsync();
        }
        
        public string GetAuthorName(System.Nullable<int> id) {
            return base.Channel.GetAuthorName(id);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthorNameAsync(System.Nullable<int> id) {
            return base.Channel.GetAuthorNameAsync(id);
        }
        
        public void ImportFile() {
            base.Channel.ImportFile();
        }
        
        public System.Threading.Tasks.Task ImportFileAsync() {
            return base.Channel.ImportFileAsync();
        }
    }
}
